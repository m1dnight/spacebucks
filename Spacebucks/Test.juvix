module Spacebucks.Test;

import Stdlib.Prelude open;
import Applib open;
import Anoma.Encode open;
import Stdlib.Debug.Trace open;
import Anoma.Identity.External open;
import Anoma.Identity.Internal open;
import Anoma.Builtin.System as SystemBuiltins open;
import Anoma.Primitives.FixedSize open;

main : Action :=
  trace "start" >-> let
    appdata := trace "here here" >-> AppData.empty;
  in
     trace "here" >-> Action.create [] [] appdata;

-- let
--           priv := InternalIdentity.fromByteArray priv-key;
--           publ := ExternalIdentity.fromByteArray pub-key;
--           signed : SystemBuiltins.Internal.SignedMessage := ByteArray.zero 1;
--           ver : Bool := SystemBuiltins.anomaVerifyDetached signed "yeet" pub-key;
--         in trace "yeet" >-> "hello";

-- trace "start"
--   >-> trace priv-key
--   >-> trace "end"
--   >-> (let
--         idd := InternalIdentity.fromByteArray priv-key;
--         key := trace idd >-> InternalIdentity.toByteArray idd;
--         m := AnomaAtom.fromNat (builtinAnomaEncode 123);
--         kk := AnomaAtom.fromNat (builtinAnomaEncode key);
--         yyy := trace "message" >-> trace m >-> 1;
--         signature := SystemBuiltins.anomaSignDetached m key;
--       in trace "yeet" >-> "hello");
